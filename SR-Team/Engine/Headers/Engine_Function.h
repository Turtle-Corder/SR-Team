#pragma once
#ifndef __ENGINE_FUNCTION_H__
#define __ENGINE_FUNCTION_H__





//----------------------------------------------------------------------------------------------------
// 메모리 해제
//----------------------------------------------------------------------------------------------------

//--------------------------------------------------
// 단일
//--------------------------------------------------
template<typename T>
void Safe_Delete(T& ptr)
{
	if (nullptr != ptr)
	{
		delete ptr;
		ptr = nullptr;
	}
}


//--------------------------------------------------
// 배열
//--------------------------------------------------
template<typename T>
void Safe_Delete_Array(T& ptr)
{
	if (nullptr != ptr)
	{
		delete[] ptr;
		ptr = nullptr;
	}
}





//----------------------------------------------------------------------------------------------------
// 레퍼런스 카운터
//----------------------------------------------------------------------------------------------------

//--------------------------------------------------
// 증가
//--------------------------------------------------
template<typename T>
_uint Safe_AddRef(T& ptr)
{
	_uint iRefCnt = 0;
	if (nullptr != ptr)
		iRefCnt = ptr->AddRef();

	return iRefCnt;
}


//--------------------------------------------------
// 감소
//--------------------------------------------------
template<typename T>
_uint Safe_Release(T& ptr)
{
	_uint iRefCnt = 0;
	if (nullptr != ptr)
	{
		iRefCnt = ptr->Release();
		if (0 == iRefCnt)
			ptr = nullptr;
	}

	return iRefCnt;
}





#endif